---
resources:
  - name: code
    type: git
    icon: github
    source:
      uri: https://github.com/robinhuiser/concourse-arm64

  - name: redis
    type: registry-image
    icon: docker
    source:
      repository: arm64v8/redis
      tag: 5-alpine

  - name: busybox
    type: registry-image
    icon: docker
    source:
      repository: arm64v8/busybox

jobs:
  - name: test-job
    plan:
    - get: code
      params: {depth: 1}
    - task: run-unit-tests
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: arm64v8/busybox
        inputs:
          - name: code
        run:
          path: sh
          args:
            - -exc
            - |
              ./code/external-tasks/dcind/example/unit-tests.sh

  - name: integration
    plan:
      - get: code
        params: {depth: 1}
        passed: [test-job]
        trigger: true
      - get: redis
        params: {format: oci}
      - get: busybox
        params: {format: oci}
      - task: run-integration-tests
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: rdclda/concourse-dcind-task
          inputs:
            - name: code
            - name: redis
          run:
            path: bash
            args:
              - -ec
              - |
                source /docker-lib.sh
                start_docker

                # Strictly speaking, preloading of Docker images is not required.
                # However, you might want to do this for a couple of reasons:
                # - If the image comes from a private repository, it is much easier to let Concourse pull it,
                #   and then pass it through to the task.
                # - When the image is passed to the task, Concourse can often get the image from its cache.
                docker load -i redis/image.tar

                # This is just to visually check in the log that images have been loaded successfully.
                docker images

                # Run the container with tests and its dependencies.
                docker-compose -f code/external-tasks/dcind/example/integration.yaml run tests
